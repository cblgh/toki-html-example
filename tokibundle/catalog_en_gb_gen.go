// Generated by github.com/romshark/toki. DO NOT EDIT.

package tokibundle

import (
	"fmt"
	"io"
	"time"

	locales "github.com/go-playground/locales"
	locale "github.com/go-playground/locales/en_GB"
	language "golang.org/x/text/language"
)

// This prevents the "imported and not used" error when some features are not used.
var (
	_ fmt.Formatter = nil
	_ time.Time

	tr_en_gb  = locale.New()
	loc_en_gb = language.MustParse("en-GB")
)

type catalog_en_gb struct{}

var writers_en_gb = map[string]func(w io.Writer, args ...any) (int, error){
	msg174d508b7de4a66e: nil,
	msg1837c1944267e92c: nil,
	msg29f53e485d987b3a: nil,
	msg74b8f28e46dd53ca: nil,
	msg7bb3ef92a7e3143:  nil,
	msgadaaf2bd729300b7: nil,
	msgbbeadd7d919a7262: nil,
	msgccdcc7fa59d07e9:  nil,
	msgce17bb72c4cbde42: nil,
	msgd2b12e933df64c21: nil,
	msgd705fc92646475e1: nil,
	msgda9447c71e9d623c: nil,
	msgdc9cd0d10c2be12:  nil,
	msgddbcdfb79053245d: nil,
	msge6f7796c88d8fbbc: nil,
	msgf445564e16921617: nil,
}

func (catalog_en_gb) Locale() language.Tag { return loc_en_gb }

func (catalog_en_gb) Translator() locales.Translator { return tr_en_gb }

func (catalog_en_gb) String(tik string, args ...any) string {
	b := poolBufGet()
	defer poolBufPut(b)
	f := writers_en_gb[tik]
	if f == nil {
		_, _ = MissingTranslation(b, loc_en_gb, tik, args...)
	} else {
		_, _ = f(b, args...)
	}
	return b.String()
}

func (catalog_en_gb) Write(
	writer io.Writer, tik string, args ...any,
) (written int, err error) {
	f := writers_en_gb[tik]
	if f == nil {
		return MissingTranslation(writer, loc_en_gb, tik, args...)
	}
	return f(writer, args...)
}
