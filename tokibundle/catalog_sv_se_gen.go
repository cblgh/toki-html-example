// Generated by github.com/romshark/toki. DO NOT EDIT.

package tokibundle

import (
	"fmt"
	"io"
	"time"

	locales "github.com/go-playground/locales"
	locale "github.com/go-playground/locales/sv_SE"
	language "golang.org/x/text/language"
)

// This prevents the "imported and not used" error when some features are not used.
var (
	_ fmt.Formatter = nil
	_ time.Time

	tr_sv_se  = locale.New()
	loc_sv_se = language.MustParse("sv-SE")
)

type catalog_sv_se struct{}

var writers_sv_se = map[string]func(w io.Writer, args ...any) (int, error){
	msg174d508b7de4a66e: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "Mjölsida")
	},
	msg1837c1944267e92c: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "När man bakar glutenfritt är det typiskt bäst att blanda några olika mjölsorter")
	},
	msg29f53e485d987b3a: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "Rismjöl")
	},
	msg74b8f28e46dd53ca: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "Vetemjöl")
	},
	msg7bb3ef92a7e3143: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "När det kommer till vetemjöl finns det en stor variation och därtill olika nivåer av näringsinnehåll. Ju mer det finns av det ursprungliga vetkornet kvar i mjölet, desto bättre. Stenmalna mjöler är inte bara en fluga, utan ett tecken som tyder på att detta mjöl antagligen har en större andel fiber och näring")
	},
	msgbbeadd7d919a7262: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "På denna sida samlar jag en del av mina favvomjölsorter")
	},
	msgccdcc7fa59d07e9: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "Vårvetemjöl (brödmjöl)")
	},
	msgce17bb72c4cbde42: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "Grahamsmjöl")
	},
	msgd2b12e933df64c21: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "Mandelmjöl")
	},
	msgd705fc92646475e1: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "Dinkel")
	},
	msgda9447c71e9d623c: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "Mina mjöllistor")
	},
	msgddbcdfb79053245d: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "Glutenfria mjöler är viktigt av allergianledningar och för att kunna baka godsaker till vänner utan att ta kål på dem. De är också viktiga för bröd-bakning.")
	},
	msge6f7796c88d8fbbc: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "Glutenfria mjöl")
	},
	msgf445564e16921617: func(w io.Writer, args ...any) (written int, err error) {
		return wrs(w, "Kikärtsmjöl")
	},
}

func (catalog_sv_se) Locale() language.Tag { return loc_sv_se }

func (catalog_sv_se) Translator() locales.Translator { return tr_sv_se }

func (catalog_sv_se) String(tik string, args ...any) string {
	b := poolBufGet()
	defer poolBufPut(b)
	f := writers_sv_se[tik]
	if f == nil {
		_, _ = MissingTranslation(b, loc_sv_se, tik, args...)
	} else {
		_, _ = f(b, args...)
	}
	return b.String()
}

func (catalog_sv_se) Write(
	writer io.Writer, tik string, args ...any,
) (written int, err error) {
	f := writers_sv_se[tik]
	if f == nil {
		return MissingTranslation(writer, loc_sv_se, tik, args...)
	}
	return f(writer, args...)
}
